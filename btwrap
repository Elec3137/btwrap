#!/bin/sh
r="\033[31;1m"
c="\033[36;1m"
e="\033[0m"
dict_path="/usr/share/dict/cracklib-small"


print_usage(){
printf "${c}Shell wrapper for btrfs snapshots (creation, cleanup, space usage polling)${e}

${c}Global options${e}
    -q     quiet (suppress minor warnings and all confirmations)

${c}Actions${e}
btwrap -C <subvolume>
    ${c}create${e} a subvolume '.snapshots' under specified subvolume
btwrap -S
    ${c}snapshot${e} every subvolume that contains a '.snapshots' subvolume
btwrap -D
    ${r}delete${e} the oldest snapshot from each '.snapshots' subvolume
btwrap -L
    ${c}list${e} all snapshots
        -d       poll for ${c}disk usage${e} summary of each '.snapshots' subvolume
${c}Options${e}
    -m <path>    specify the subvolume instead of searching (for D,S,d)

Action order: list > create > delete > snapshot
${c}Example usage:${e}
btwrap -C /home     # creates subvolume /home/.snapshots
btwrap -Sm /home    # snapshots /home subvolume into /home/.snapshots/<name>
btwrap -SD          # for each visible '.snapshots' subvolume: delete the oldest snapshot within and then snapshot the parent subvolume into it
";}

sfd(){ # shorthand for constantly used fd command
fd -HF ".snapshots" /
}
chk_dups(){ # for making sure there are no nested subvolumes in $i
[ $(echo $i | awk -F "snapshots" '{print NF-1}') -lt 2 ]
}

printf "$r"
while getopts m:LdC:Sn:Dq flag; do
    case "${flag}" in
            q) quiet=true;;
        S) snapshot=true;;
        D) delete=true;;
        L) list=true;;
        d) du=true;;
            m) path=${OPTARG};;

            C) create=${OPTARG};;
        *) print_usage
            exit 1 ;;
    esac
done
printf "$e"

if [ "$list" = true ]; then
    if [ -z $path ]; then   # if $path is empty
        sudo btrfs subv list -st /
    else
        sudo btrfs subv list -st $path
    fi
fi
if [ "$du" = "true" ]; then
    [ ! "$quiet" = "true" ] && printf "${c}be patient please! this may take a while:${e}\n"
    if [ -z $path ]; then
        for i in $(sfd); do
            chk_dups && sudo btrfs filesystem du -s $i
        done
    else
        sudo btrfs filesystem du -s $path/.snapshots
    fi
fi

if [ -n "$create" ]; then
    sudo btrfs subv create $create/.snapshots # prints "ERROR: Could not create subvolume: File exists" if there's something else already there
fi

if [ "$delete" = true ]; then
    if [ -z $path ]; then   # $path is empty
        for i in $(sfd); do
            chk_dups && sudo btrfs subv delete ${i}$(echo $(sudo ls -t --time creation $i) | awk '{print $1}')
        done
    else
        sudo btrfs subv delete ${path}/.snapshots/$(echo $(sudo ls -t --time creation $path/.snapshots) | awk '{print $1}')
    fi
fi

if [ "$snapshot" = true ]; then
    rand=$(dd if=/dev/urandom count=1 2> /dev/null | cksum | cut -d' ' -f1)

    if [ -r $dict_path ]; then  # if $dict_path DOES exist and is readable
        name=$(shuf -n 1 $dict_path)$rand
    else
        [ ! "$quiet" = "true" ] && printf "${c}Unreadable or DNE: ${dict_path} falling back to just random int${e}\n"
        name=$rand
    fi

    if [ -z $path ]; then   # if $path is empty
        for i in $(sfd); do
            chk_dups && sudo btrfs subv snap -r $i../ $i$name
        done
    else
        sudo btrfs subv snap -r $path $path/.snapshots/$name
    fi
fi

